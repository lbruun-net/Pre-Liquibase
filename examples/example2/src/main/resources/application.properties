#
#  Default properties for application 'Medusa'.
#
# This is an example of an application which uses two completely separate
# databases, one for the application data and one for the logging data.
#



# Set a default for the environment name. In this application, this value is
# used to create the database schema names for the application and the logging
# database. The schema names will be of the form "medusa_${medusa.envName}_app"
# and "medusa_${medusa.envName}_log" respectively. By doing this we can co-host
# multiple environments in the same database server, e.g. "medusa_dev_app",
# "medusa_dev_log", "medusa_prod_app", "medusa_prod_log".
#
# As any Spring Boot configuration property it can be overridden by an OS
# environment variable, in this case variable 'MEDUSA_ENVNAME'.
medusa.envName=unnamed



# -------------------------------------------------------------------------
# Persistence configuration
# -------------------------------------------------------------------------


# Note:  Due to how Liquibase works it is best to keep the database schema name
# with all letters in same case, i.e. either all in upper-case or all in
# lower-case. In other words: "Foo_bar" is not a good value, but "foo_bar" or
# "FOO_BAR" is. The reason is that Liquibase doesn't let you control the
# object quoting strategy for its own tables, DATABASECHANGELOG and DATABASECHANGELOGLOCK.
# It will always use quoting strategy LEGACY for these objects. This means that
# it will be quoting the schema name if it is of mixed case and this is most
# likely not what you want. To avoid surprises: stick to either all lower-case or
# all upper-case.
# In the example below the db schema name can be influenced from outside
# (by an OS env var) which means that we have to take care that such OS var 
# does not inject a mixed-case value. 


# Set the schema to use. We have to tell both Hibernate and Liquibase this.
medusa.db1-schema-name=medusa_${medusa.envName}_app
medusa.db2-schema-name=medusa_${medusa.envName}_log




# ---------------------------------------------------------------------
# Config for database 1 (application data)
# ---------------------------------------------------------------------

# DataSource configuration:
# (PostgreSQL example)
#persistence.db1.datasource.url=jdbc:postgresql://localhost:5432/medusa

# JDBC Connection Pool configuration
# 'poolconfig' namespace will be on-passed as-is to whatever JDBC Connection Pool 
# implementation is used. (most likely Hikari as this is the default in Spring Boot)
persistence.db1.datasource.poolconfig.poolName=JDBCConnectionPool-app

# Pre-Liquibase configuration
persistence.db1.preliquibase.sqlScriptReferences=classpath:preliquibase/db1/
# Liquibase configuration
persistence.db1.liquibase.change-log=classpath:/liquibase/db1/changelog/db.changelog-master.yaml
persistence.db1.liquibase.default-schema=${medusa.db1-schema-name}
persistence.db1.liquibase.liquibase-schema=${medusa.db1-schema-name}
persistence.db1.liquibase.database-change-log-table=_LIQUIBASE_DBCHANGELOG
persistence.db1.liquibase.database-change-log-lock-table=_LIQUIBASE_DBCHANGELOGLOCK
# ORM/JPA configuration
persistence.db1.jpa.properties.hibernate.default_schema=${medusa.db1-schema-name}
persistence.db1.jpa.persistenceUnitName=app


# ---------------------------------------------------------------------
# Config for database 2 (logging data)
# ---------------------------------------------------------------------

# DataSource configuration:
# (MS SQL Server example)
#persistence.db2.datasource.url=jdbc:sqlserver://localhost\\SQLEXPRESS;databaseName=medusa
#persistence.db2.datasource.username=medusa_nonprod
#persistence.db2.datasource.password=verysecret

# JDBC Connection Pool configuration
# 'poolconfig' namespace will be on-passed as-is to whatever JDBC Connection Pool
# implementation is used. (most likely Hikari as this is the default in Spring Boot)
persistence.db2.datasource.poolconfig.poolName=JDBCConnectionPool-log
persistence.db2.datasource.poolconfig.minimumIdle=2

# Pre-Liquibase configuration
persistence.db2.preliquibase.sqlScriptReferences=classpath:preliquibase/db2/
# Liquibase configuration
persistence.db2.liquibase.change-log=classpath:/liquibase/db2/changelog/db.changelog-master.yaml
persistence.db2.liquibase.default-schema=${medusa.db2-schema-name}
persistence.db2.liquibase.liquibase-schema=${medusa.db2-schema-name}
persistence.db2.liquibase.database-change-log-table=_LIQUIBASE_DBCHANGELOG
persistence.db2.liquibase.database-change-log-lock-table=_LIQUIBASE_DBCHANGELOGLOCK
# ORM/JPA configuration
persistence.db2.jpa.properties.hibernate.default_schema=${medusa.db2-schema-name}
persistence.db2.jpa.persistenceUnitName=log






# -------------------------------------------------------------------------
# Debugging
# -------------------------------------------------------------------------

#debug=true
#logging.level.org.springframework.jdbc.datasource.init=DEBUG
#logging.level.org.springframework.boot.autoconfigure=DEBUG
#logging.level.net.lbruun.springboot.preliquibase=TRACE
#logging.level.liquibase=TRACE
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE
