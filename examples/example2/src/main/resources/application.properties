#
#  Default properties for application 'Medusa'.
#
#

# Set a default for the environment name.
# As any Spring Boot configuration property it can be overriden by an OS 
# environment variable, in this case variable 'MEDUSA_ENVNAME'.
medusa.envName=default_environment

# -------------------------------------------------------------------------
# Persistence configuration
# -------------------------------------------------------------------------

# Note:  Due to how Liquibase works it is best to keep the database schema name
# with all letters in same case, i.e. either all in upper-case or all in
# lower-case. In other words: "Foo_bar" is not a good value, but "foo_bar" or
# "FOO_BAR" is. The reason is that Liquibase doesn't let you control the
# object quoting strategy for its own tables, DATABASECHANGELOG and DATABASECHANGELOGLOCK.
# It will always use quoting strategy LEGACY for these objects. This means that
# it will be quoting the schema name if it is of mixed case and this is most
# likely not what you want. To avoid surprises: stick to either all lower-case or
# all upper-case.
# In the example below the db schema name can be influenced from outside
# (by an OS env var) which means that we have to take care that such OS var 
# does not inject a mixed-case value. 


# Set the schema to use. We have to tell both Hibernate and Liquibase this.
medusa.db1-schema-name=medusa_${medusa.envName}_app
medusa.db2-schema-name=medusa_${medusa.envName}_log

# DataSource configuration:

# PostgreSQL example
#persistence.datasource.db1.url=jdbc:postgresql://localhost:5432/medusa
# MS SQL Server example
#persistence.datasource.db2.url=jdbc:sqlserver://localhost\\SQLEXPRESS;databaseName=medusa
#persistence.datasource.db2.username=medusa_nonprod
#persistence.datasource.db2.password=verysecret

# JDBC Connection Pool configuration
# 'poolconfig' namespace will be on-passed as-is to whatever JDBC Connection Pool 
# implementation is used. (most likeky Hikari as this is the default in Spring Boot)
persistence.datasource.poolconfig.db1.poolName=JDBCConnectionPool-app
persistence.datasource.poolconfig.db2.poolName=JDBCConnectionPool-log
persistence.datasource.poolconfig.db2.minimumIdle=2

# Pre-Liquibase configuration
persistence.preliquibase.db1.sql-script-references=classpath:preliquibase/db1/
persistence.preliquibase.db2.sql-script-references=classpath:preliquibase/db2/

# Liquibase configuration
persistence.liquibase.db1.change-log=classpath:/liquibase/db1/changelog/db.changelog-master.yaml
persistence.liquibase.db1.default-schema=${medusa.db1-schema-name}
persistence.liquibase.db1.liquibase-schema=${medusa.db1-schema-name}
persistence.liquibase.db1.database-change-log-table=LIQUIBASE_DBCHANGELOG
persistence.liquibase.db1.database-change-log-lock-table=LIQUIBASE_DBCHANGELOGLOCK
persistence.liquibase.db2.change-log=classpath:/liquibase/db2/changelog/db.changelog-master.yaml
persistence.liquibase.db2.default-schema=${medusa.db2-schema-name}
persistence.liquibase.db2.liquibase-schema=${medusa.db2-schema-name}
persistence.liquibase.db2.database-change-log-table=LIQUIBASE_DBCHANGELOG
persistence.liquibase.db2.database-change-log-lock-table=LIQUIBASE_DBCHANGELOGLOCK

# ORM/JPA configuration
persistence.jpa.db1.properties.hibernate.default_schema=${medusa.db1-schema-name}
persistence.jpa.db2.properties.hibernate.default_schema=${medusa.db2-schema-name}
persistence.jpa.db1.persistenceUnitName=app
persistence.jpa.db2.persistenceUnitName=log

# -------------------------------------------------------------------------
# Debugging
# -------------------------------------------------------------------------

debug=true
logging.level.org.springframework.jdbc.datasource.init=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.net.lbruun.springboot.preliquibase=TRACE
logging.level.liquibase=TRACE
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
