<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2021 lbruun.net.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         child.project.url.inherit.append.path="false">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.lbruun.springboot</groupId>
  <artifactId>preliquibase-spring-boot-parent</artifactId>
  <version>${revision}</version> <!-- never change this -->
  <packaging>pom</packaging>
  <modules>
    <module>autoconfigure</module>
    <module>starter</module>
    <module>examples/example1</module>
    <module>examples/example2</module>
  </modules>
  <name>Spring Boot AutoConfiguration :: Pre-Liquibase Parent</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <spring.boot.version>3.4.0</spring.boot.version>

    <!-- parent doesn't need to be installed, deployed or signed.
         (these are overridden in submodules)                -->
    <maven.install.skip>true</maven.install.skip>
    <skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
    <gpg.skip>true</gpg.skip>


    <!-- Some sensible defaults for local development.
         These values are only used when executing Maven locally. -->
    <revision>LATEST-SNAPSHOT</revision>
    <ci.project.url>https://UNKNOWN.ORG</ci.project.url> <!-- placeholder: set dynamically by the CI system -->
    <ci.scm.tag>HEAD</ci.scm.tag>                        <!-- placeholder: set dynamically by the CI system -->
  </properties>

  <url>${ci.project.url}</url>

  <description>
    Parent for Pre-Liquibase Spring Boot module
  </description>

  <organization>
    <name>lbruun.net</name>
  </organization>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <scm child.scm.url.inherit.append.path="false">
    <url>${ci.project.url}/tree/${project.scm.tag}</url>
    <tag>${ci.scm.tag}</tag>
  </scm>

  <developers>
    <developer>
      <name>Lars Bruun-Hansen</name>
      <organization>lbruun.net</organization>
      <organizationUrl>https://github.com/lbruun-net</organizationUrl>
    </developer>
  </developers>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Import dependency management from Spring Boot -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <build>
    <plugins>
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.23</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <!-- The 'flatten-maven-plugin' is required because we use Maven CI Friendly feature
           and because this is a multi-module project.
           See https://maven.apache.org/maven-ci-friendly.html for more information.
           In Maven 4 we can finally get rid of this plugin.                         -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <flattenMode>ossrh</flattenMode>
        </configuration>
        <executions>
          <!-- enable flattening -->
          <execution>
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
          </execution>
          <!-- ensure proper cleanup -->
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <profiles>
    <profile>
      <!-- This profile should be activated when building in the CI system -->
      <id>ci</id>
      <activation>
        <property>
          <!-- GitHub set this variable -->
          <name>env.CI</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!--  Javadoc here because we want to know early if there are errors in Javadoc generation.
                In the standard Sonatype guidelines it is inside the 'release-to-central' profile,
                which means we will not discover Javadoc errors until we decide to release.
                Instead, here, we pay the price of Javadoc generation on every push: an acceptable tradeoff.
          -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.6.2</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>


    <!-- This profile should be activated when creating releases into Maven Central
         (regardless if regular release or snapshot release). -->
    <profile>
      <id>publication</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.0</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.2.7</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <signer>bc</signer> <!-- use Bouncy Castle -->
                </configuration>
              </execution>
            </executions>
          </plugin>


          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.7.0</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>maven-central</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>

              <!-- Flip this if you feel confident about your build, and it passes
                   the rules of Maven Central                                       -->
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
